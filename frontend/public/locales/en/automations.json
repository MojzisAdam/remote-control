{
    "title": "Automations",
    "create": "Create",
    "edit": "Edit",
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "active": "Active",
    "draft": "Draft",
    "error": "Error",
    "success": "Success",
    "loading": "Loading automations...",
    "neverRun": "Never run",
    "lastRun": "Last run",
    "triggers": "triggers",
    "conditions": "conditions",
    "actions": "actions",

    "status": {
        "success": "Success",
        "failed": "Failed",
        "skipped": "Skipped",
        "partial": "Partial",
        "warning": "Warning",
        "unknown": "Unknown"
    },
    "statusDescriptions": {
        "success": "Automation executed successfully",
        "failed": "Automation execution failed",
        "skipped": "Automation was skipped due to conditions not being met",
        "partial": "Automation partially executed - some actions completed",
        "warning": "Automation executed with warnings",
        "unknown": "Unknown status"
    },

    "list": {
        "title": "Automations",
        "createNew": "Create",
        "noAutomations": "No automations found",
        "noAutomationsDescription": "Get started by creating your first automation",
        "noMatches": "No automations match your current filters",
        "searchPlaceholder": "Search automations...",
        "filterAll": "All",
        "filterActive": "Active",
        "filterDisabled": "Disabled",
        "enabledToggle": "Enabled",
        "disabledToggle": "Disabled",
        "moreOptions": "More options",
        "viewLogs": "View Logs",
        "duplicate": "Duplicate",
        "confirmDelete": "Are you sure you want to delete \"{{name}}\"? This action cannot be undone and will permanently remove the automation and all its execution logs.",
        "deleteSuccess": "Automation deleted successfully",
        "toggleSuccess": "Automation {{action}} successfully",
        "showing": "Showing",
        "to": "to",
        "of": "of",
        "results": "results",
        "previous": "Previous",
        "next": "Next",
        "rows": "rows",
        "page": "Page"
    },

    "statistics": {
        "total": "Total",
        "active": "Active",
        "disabled": "Disabled",
        "withErrors": "With Errors",
        "successful": "Successful", 
        "failed": "Failed",
        "skipped": "Skipped",
        "partial": "Partial",
        "warning": "Warning",
        "successRate": "Success Rate"
    },

    "builder": {
        "title": "Automation Builder",
        "newAutomation": "New Automation",
        "editAutomation": "Edit Automation",
        "automationDetails": "Automation Details",
        "namePlaceholder": "Automation name...",
        "descriptionPlaceholder": "Description (optional)...",
        "addComponents": "Add Components",
        "addTrigger": "Add Trigger",
        "addCondition": "Add Condition",
        "addAction": "Add Action",
        "flowStatistics": "Flow Statistics",
        "validationStatus": "Status",
        "edit": "Edit",
        "new": "New",
        "valid": "Valid",
        "invalid": "Invalid",
        "quickTips": "Quick Tips",
        "automationStatus": "Automation Status",
        "validate": "Validate",
        "test": "Test",
        "testing": "Testing...",
        "reset": "Reset",
        "clear": "Clear",
        "save": "Save",
        "saveAsDraft": "Save as Draft",
        "saving": "Saving...",
        "list": "List",
        "logs": "Logs",
        "mobileWarning": "Automation editing requires a desktop device for the best experience. The visual flow editor is not optimized for mobile screens.",
        "mobileGoBack": "Back to Automations",
        "navigationStatus": "Navigation & Status",
        "draft": "Draft",
        "triggers": "Triggers",
        "conditions": "Conditions",
        "actions": "Actions",
        "nodeConfiguration": "Node Configuration",
        "nodeSettings": "Node Settings",
        "configured": "Configured",
        "notConfigured": "Not configured",
        "device": "Device",
        "field": "Field",
        "value": "Value",
        "range": "Range",
        "operator": "Operator",
        "selectDevice": "Select a device",
        "selectField": "Select a field",
        "selectValue": "Select value",
        "selectOperator": "Select operator",
        "selectActionType": "Select action type",
        "selectConditionType": "Select condition type",
        "selectTriggerType": "Select trigger type",
        "enterValue": "Enter value",
        "enterValueWithRange": "Enter value ({{min}}-{{max}})",
        "enterMessage": "Enter message",
        "enterLogMessage": "Enter log message",
        "enterNotificationMessage": "Enter notification message",
        "timeBasedTrigger": "Time-based",
        "deviceStateChange": "Device State Change",
        "intervalTrigger": "Interval",
        "simpleCondition": "Simple Condition",
        "timeCondition": "Time Condition",
        "dayOfWeekCondition": "Day of Week",
        "controlDevice": "Control Device",
        "sendNotification": "Send Notification",
        "logMessage": "Log Message",
        "triggerType": "Trigger Type",
        "conditionType": "Condition Type",
        "actionType": "Action Type",
        "fieldToControl": "Field to Control",
        "whatToCheck": "What to check",
        "notificationMessage": "Notification Message",
        "logMessageLabel": "Log Message",
        "time": "Time",
        "interval": "Interval (minutes)",
        "daysOfWeek": "Days of Week",
        "enterInterval": "Enter interval in minutes",
        "noFieldsAvailable": "No fields available for this device",
        "selectDeviceFirst": "Select a device first",
        "isEqualTo": "is equal to (=)",
        "isNotEqualTo": "is not equal to (≠)",
        "isGreaterThan": "is greater than (>)",
        "isLessThan": "is less than (<)",
        "isGreaterOrEqual": "is greater or equal (≥)",
        "isLessOrEqual": "is less or equal (≤)",
        "is": "is",
        "isNot": "is not",
        "monday": "Monday",
        "tuesday": "Tuesday", 
        "wednesday": "Wednesday",
        "thursday": "Thursday",
        "friday": "Friday",
        "saturday": "Saturday",
        "sunday": "Sunday",
        "deleteConnectionInstruction": "Press Delete or Backspace to remove this connection",
        		"nodeConfigSaved": "Node configuration saved",
		"nodeDeleted": "Node Deleted",
        "nodeRemoved": "Node has been removed from the automation.",
        "failedSaveDraft": "Failed to save draft",
        "automationDisabled": "Automation disabled successfully",
        "automationEnabled": "Automation enabled successfully",
        "flowValidReady": "Your automation flow is valid and ready to save",
        "validationErrors": "Found {{count}} validation error(s)",
        "workflowReset": "The automation workflow has been reset",
        "intervalMinutes": "Interval (minutes)",
        "selectWhatToCheck": "Select what to check",
        "condition": "Condition",
        "selectCondition": "Select condition",
        "noControllableFields": "No controllable fields available",
        "quickTipDragConnect": "Drag to connect nodes",
        "quickTipDeleteConnection": "Select connection + Del to remove",
        "quickTipConfigureNode": "Click node to configure",
        "quickTipDeleteNode": "Select node + Del to delete",
        "confirmReset": "Clear Workflow",
        "confirmResetDescription": "Are you sure you want to clear the workflow? This action cannot be undone and will remove all nodes and connections.",
        "clearWorkflow": "Clear Workflow"
    },

    "configuration": {
        "configureTrigger": "Configure Trigger",
        "configureCondition": "Configure Condition",
        "configureAction": "Configure Action",
        "configureNode": "Configure Node",
        "configureDescription": "Configure the parameters for this {{nodeType}} node.",
        "nodeInformation": "Node Information",
        "saveConfiguration": "Save Configuration",
        "cancel": "Cancel"
    },

    "validation": {
        "validationPassed": "Validation Passed",
        "validationFailed": "Validation Failed",
        "validationError": "Validation Error",
        "nameRequired": "Please enter a name for the automation",
        "fixErrorsBeforeTest": "Please fix validation errors before testing",
        "fixErrorsBeforeSave": "Please fix the validation errors before saving",
        "failedToSaveDraft": "Failed to save draft",
        "confirmReset": "Are you sure you want to clear the workflow? This action cannot be undone.",
        "deviceSelectionRequired": "Device selection is required for state change triggers",
        "fieldSelectionRequired": "Field selection is required",
        "valueRequired": "Value is required",
        "operatorRequired": "Operator selection is required",
        "timeRequired": "Time is required",
        "intervalRequired": "Interval is required",
        "messageRequired": "Message is required",
        "deviceRequiredStateChange": "Device selection is required for state change triggers",
        "fieldRequiredStateChange": "Field selection is required for state change triggers",
        "timeRequiredTimeTrigger": "Time is required for time-based triggers",
        "intervalRequiredIntervalTrigger": "Valid interval is required for interval triggers",
        "deviceRequiredSimpleCondition": "Device selection is required for simple conditions",
        "operatorRequiredWhenField": "Comparison operator is required when field is selected",
        "valueRequiredWhenOperator": "Comparison value is required when operator is selected",
        "timeFormatInvalid": "Time format is invalid",
        "deviceRequiredAdvancedCondition": "Device selection is required for advanced conditions",
        "jsConditionCodeRequired": "JavaScript condition code is required",
        "deviceRequiredDeviceControl": "Device selection is required for device control actions",
        "fieldRequiredDeviceControl": "Field selection is required for device control actions",
        "valueRequiredDeviceControl": "Value is required for device control",
        "mqttTopicRequired": "MQTT topic is required",
        "mqttMessageRequired": "MQTT message is required",
        "notificationMessageRequired": "Notification message is required"
    },

    "flowValidation": {
        "atLeastOneTrigger": "Automation must have at least one trigger",
        "atLeastOneAction": "Automation must have at least one action",
        "nodeTypeRequired": "Node type is required",
        "deviceRequired": "Device selection is required for this node type",
        "startNodeNotConnected": "Start node must be connected to at least one other node",
        "endNodeNotConnected": "End node must receive at least one connection",
        "triggerNotConnected": "Trigger node must have outgoing connections",
        "actionNotConnected": "Action node must have incoming connections",
        "conditionNotConnected": "Condition node must have both incoming and outgoing connections",
        "nodeIsolated": "Node is isolated and not connected to the flow",
        "noPathToEnd": "No valid path exists from start to end node",
        "conditionAfterAction": "Conditions should come before actions in the flow",
        "actionBeforeTrigger": "Actions cannot come before triggers in the flow",
        "triggerTimeRequired": "Time is required for time-based triggers",
        "triggerTimeDaysRequired": "At least one day is required for time-based triggers",
        "triggerMqttTopicRequired": "MQTT topic is required",
        "triggerStateChangeDeviceRequired": "Device is required for state change triggers",
        "triggerStateChangeFieldRequired": "Field is required for state change triggers",
        "conditionDeviceRequired": "Device is required",
        "conditionFieldRequired": "Field is required",
        "conditionOperatorRequired": "Operator is required",
        "conditionValueRequired": "Value is required",
        "actionDeviceControlDeviceRequired": "Device is required for device control actions",
        "actionDeviceControlFieldRequired": "Field is required for device control actions",
        "actionDeviceControlValueRequired": "Value is required for device control actions",
        "actionMqttTopicRequired": "MQTT topic is required",
        "actionNotifyTitleRequired": "Notification title is required"
    },

    "constants": {
        "triggerTypes": {
            "time": "Time-based",
            "timeDescription": "Execute at specific times and days",
            "stateChange": "Device State Change", 
            "stateChangeDescription": "Execute when device state changes",
            "interval": "Interval",
            "intervalDescription": "Execute at regular intervals"
        },
        "conditionTypes": {
            "simple": "Simple Condition",
            "simpleDescription": "Compare device value with a threshold",
            "time": "Time Condition",
            "timeDescription": "Check specific time",
            "dayOfWeek": "Day of Week",
            "dayOfWeekDescription": "Check specific days of the week"
        },
        "actionTypes": {
            "deviceControl": "Control Device",
            "deviceControlDescription": "Change device parameters",
            "notify": "Send Notification",
            "notifyDescription": "Send notification to user",
            "log": "Log Message",
            "logDescription": "Write entry to automation log"
        },
        "operators": {
            "lessThan": "Less than",
            "lessThanOrEqual": "Less than or equal",
            "equalTo": "Equal to",
            "greaterThanOrEqual": "Greater than or equal",
            "greaterThan": "Greater than",
            "notEqualTo": "Not equal to"
        },
        "daysOfWeek": {
            "monday": "Monday",
            "tuesday": "Tuesday",
            "wednesday": "Wednesday", 
            "thursday": "Thursday",
            "friday": "Friday",
            "saturday": "Saturday",
            "sunday": "Sunday"
        },
        "daysOfWeekShort": {
            "monday": "Mon",
            "tuesday": "Tue",
            "wednesday": "Wed",
            "thursday": "Thu",
            "friday": "Fri",
            "saturday": "Sat",
            "sunday": "Sun"
        },
        "typeLabels": {
            "time": "Time",
            "stateChange": "State Change",
            "interval": "Interval",
            "simple": "Simple",
            "dayOfWeek": "Day of Week",
            "deviceControl": "Device Control",
            "notification": "Notification",
            "log": "Log",
            "unknown": "Unknown"
        }
    },

    "messages": {
        "automationCreated": "Automation created successfully",
        "automationUpdated": "Automation updated successfully",
        "automationCreatedDraft": "Automation created successfully as draft",
        "automationUpdatedDraft": "Automation updated successfully as draft",
        "failedToCreate": "Failed to create automation",
        "failedToUpdate": "Failed to update automation",
        "testSuccessful": "Test Successful",
        "testFailed": "Test Failed",
        "testDescription": "Automation workflow test completed successfully",
        "testErrorDescription": "Automation test encountered errors",
        "unexpectedError": "An unexpected error occurred",
        "workflowCleared": "Workflow Cleared"
    },

    "logs": {
        "title": "Execution Logs",
        "description": "View detailed execution logs for this automation including status, timestamps, and error details.",
        "executionHistory": "Execution History",
        "noLogs": "No execution logs found",
        "noLogsDescription": "This automation hasn't been executed yet.",
        "noMatches": "No logs match your current filters",
        "totalExecutions": "Total Executions",
        "executedAt": "Executed At",
        "duration": "Duration",
        "details": "Details",
        "status": "Status",
        "filterAll": "All",
        "refresh": "Refresh",
        "search": "Search logs...",
        "automationNotFound": "Automation Not Found",
        "automationNotFoundDescription": "The automation you're looking for doesn't exist or you don't have permission to view it.",
        "backToAutomations": "Back to Automations",
        "loadingError": "Error loading automation logs",
        "unexpectedError": "An unexpected error occurred while loading logs",
        "loadingStats": "Failed to load logs statistics",
        "totalAll": "Total (All)",
        "successful": "Successful",
        "failed": "Failed",
        "skipped": "Skipped",
        "partial": "Partial",
        "successRate": "Success Rate",
        "searchPlaceholder": "Search logs...",
        "filterSuccess": "Success",
        "filterFailed": "Failed", 
        "filterSkipped": "Skipped",
        "filterPartial": "Partial",
        "filterWarning": "Warning",
        "list": "List",
        "edit": "Edit",
        "showing": "Showing",
        "to": "to", 
        "of": "of",
        "results": "results",
        "previous": "Previous",
        "next": "Next",
        "page": "Page"
    },

    "notFound": {
        "title": "Automation Not Found",
        "description": "The automation you are looking for was not found. It may have been deleted or you may not have permission to access it.",
        "backToAutomations": "Back to Automations",
        "goBack": "Go Back",
        "goToDashboard": "Go to Dashboard"
    },

    "nodes": {
        "start": "Start",
        "end": "End",
        "trigger": "Trigger",
        "condition": "Condition",
        "action": "Action",
        "atTime": "At {{time}}",
        "everyMinutes": "Every {{interval}} min",
        "fieldChanges": "{{field}} changes"
    },

    "nodeTypes": {
        "triggerTypes": {
            "time": "Time Trigger",
            "mqtt": "MQTT Trigger",
            "state_change": "State Change",
            "interval": "Interval Trigger"
        },
        "conditionTypes": {
            "simple": "Simple Condition",
            "time": "Time Condition",
            "day_of_week": "Day of Week"
        },
        "actionTypes": {
            "device_control": "Control Device",
            "notify": "Send Notification",
            "log": "Log Message"
        }
    },

    "hookMessages": {
        "automationFetched": "Automation fetched successfully",
        "automationNotFound": "Automation not found",
        "notAuthorizedToView": "You are not authorized to view this automation",
        "notAuthorizedToUpdate": "You are not authorized to update this automation",
        "notAuthorizedToDelete": "You are not authorized to delete this automation",
        "notAuthorizedToModify": "You are not authorized to modify this automation",
        "notAuthorizedToViewLogs": "You are not authorized to view logs for this automation",
        "notAuthorizedToViewStats": "You are not authorized to view automation statistics",
        "notAuthorizedToViewLogsStats": "You are not authorized to view logs statistics for this automation",
        "validationFailed": "Validation failed. Please check your input",
        "noAccessToDevices": "You do not have access to one or more specified devices",
        "automationsFetched": "Automations fetched successfully",
        "noAutomationsFound": "No automations found",
        "notAuthorizedToViewAutomations": "You are not authorized to view automations",
        "automationStatsFetched": "Automation stats fetched successfully",
        "automationCreated": "Automation created successfully",
        "automationUpdated": "Automation updated successfully",
        "automationDeleted": "Automation deleted successfully",
        "automationStatusUpdated": "Automation status updated successfully",
        "automationLogsFetched": "Automation logs fetched successfully",
        "automationLogsStatsFetched": "Automation logs stats fetched successfully"
    }
}